Some of the commands used in class:

NODE RELATED:
To start a server running (in the directory of the js file):
:node (filename.js)

To stop it from running:
:ctrl+c

NODE PACKAGE MANAGER INSTRUCTIONS:
To install:
:npm install <module-name> --save

To uninstall:
:npm uninstall <module-name> --save

To see all globally installed packages:
:npm -g ls --depth=0

NODEMON RELATED:
Nodemon is a package that allows you to run an application and update changes live rather than have to constantly stop and start the server from running

To install:
:npm install -g nodemon

To run:
:nodemon (filename.js)

EXPRESS RELATED:
To install:
:npm install express --save (can be installed globally with -g)

To install Express Generator:
:npm install express-generator -g (global install)

Help:
:express -h

To generate a template:
:express <view-engine> <destination-directory> (destination directory created in current working directory)
:express --view=hbs myapp (view engine = handlebars, directory = myapp) (view = pug is another option)

note: This will not work immediately. Actions required:
1) cd to the directory you specified in the last command
2) :npm install

HANDLEBARS RELATED:
To install:
npm install hbs

Handlebars Partials Notes:
Within 'views' folder, create a directory 'partials'
Within 'partials' create file named _filename.hbs (_ required)
In app.js, below line 'var app = express()' add:
    //set up route for partials folder
    var hbs = require('hbs')
    hbs.registerPartials(__dirname + "/views/partials")

MONGODB:
Shell scripts go in:
/usr/local/bin

Create directory for DB data:
:sudo mkdir -p /System/Volumes/Data/data/db

Change ownership of that directory:
:sudo chown -R `id -un` /System/Volumes/Data/data/db

Run MongoDB:
:sudo mongod --dbpath /System/Volumes/Data/data/db

MongoDB Structure:
MongoDB (Server)
    --Databases
        --Collections (Actual Databases)
            Users
            Indexes
            Player Data

Navigate to where the shell scripts are stored (/usr/local/bin)
Run mongo:
:mongo

Brings you to a new comand prompt where you can run commands such as:
>show dbs (shows DBs you have)
>use testusers (switch to testusers DB even if it doesn't exist)

Once in a DB:
>db.createCollection('users') (creates a collection)
>show collections

CRUD
Insert
>db.users.insert({name:"Ryan"}) (Inserted like a JSON object - binary JSON)

Find all
>db.users.find() (retreives data) (_id value automatically assigned by MongoDB when you insert data)
>db.users.find().pretty()

Update
>db.users.updateOne({'name':'Ryan'}, {$set:{age:35}})

Remove one
>db.users.remove({'name':'Dave'})

Exit (mongo)
>exit
